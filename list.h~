#ifndef LIST_H
#define LIST_H

typedef struct ll_cell{
  void *data;
  l_cell *next;
  l_cell *prev;
} *ll_cell;

/*
 * mostly intended to use as a simple stack or queue
 * does *not* handle deallocation of lists' element upon destruction
 * so if no other ref to elements subsists after the list destruction, 
 * they should have been manually deallocated before. 
 */
typedef struct llist{  
  ll_cell *first(llist); //defined only for non empty list
  ll_cell *last(llist);  //defined only for non empty list
  void remove_first(llist); //defined only for non empty list
  void remove_last(llist);  //defined only for non empty list
  void *pop_left(llist); //defined only for non empty list
  void *pop_right(llist); //defined only for non empty list  
  void insert_left(llist); 
  void insert_right(llist);
  int is_empty(llist);  
} *llist;

#endif
